Combat component plugin notes

Using abilities:
1) The function CanUseAbility checks whether the tried ability can be used or not. It also checks whether the tried ability is a combo/chain and sets the appropriate variables;
2) TryUsedAbility is called. It sets the CurrentlyUsedAbility variable properly and adds it to the UsedAbilities map. It plays the abilities' montage (starting at the appropriate time for chains), calls AbilityStart() within the ability itself, and sets the movement speed according to the ability. It also sets the end delegate and deducts health, mana and stamina;
3) At the end of the montage (whether interrupted or not), OnAbilityMontageEnd is called. This function calls EndAbilityState(), which restores the original walking speed, calls the appropriate ability funcion (either AbilityInterrupted() or AbilityEnd() and sets CurrentlyUsedAbility to a nullptr;

The UsedAbilities map exists because once an ability montage has ended, we don't know if it was interrupted by starting a new ability, by some other in-game event (i.e. getting hit) or because the montage finished by itself. So we need to check if the interrupted ability is the same as the new one, and call the appropriate code for ending it (i.e. restoring moving speed);
For weapon abilities, the container's name should reflect the socket the weapon is held in (although no search per socket is being conducted - it should just convey the same information), and the abilities in that array should follow the same pattern as the weapon type enumerator!;

Abilities are created for a specific skeleton. That means that "attack" abilities, for which the used animation depends on the held weapon, can use literal names for equipment slots to get the weapon from. 